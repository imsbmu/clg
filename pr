#include <iostream>
using namespace std;

int lru(int Page[], int n, int Capacity) {
int faults = 0;
int hits = 0;
int *frame = new int[Capacity]; int *recent = new int[Capacity]; for
(int i = 0; i < Capacity; i++) {
frame[i] = -1;
recent[i] = 0;
}
for (int i = 0; i < n; i++)
{
bool found = false;
for (int j = 0; j < Capacity; j++) {
if (frame[j] == Page[i])
{
found = true;
recent[j] = i;
hits++;
break;
}
}
if (!found)
{
faults++;
int least_recent = 0;
for (int j = 1; j < Capacity; j++) {
if (recent[j] < recent[least_recent]) {
least_recent = j;
}
}
frame[least_recent] = Page[i]; recent[least_recent] = i;
}
}
cout << "Hit: " << hits << endl; cout << "Fault: " << faults << endl; }
int main()
{
int n, Capacity;
cout << "Number of Page";
cin >> n;
int Page[n];
cout << "Enter Page";

for (int i = 0; i < n; i++)
{
cin >> Page[i];
}
cout << "Enter number frames "; cin >> Capacity;
lru(Page, n, Capacity);
return 0;
